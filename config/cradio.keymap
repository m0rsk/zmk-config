
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>	
#include "keymap_german.h"


#define SHIFTED(sym, label) s_##sym: s_##sym {\
        label = label;\
        compatible = "zmk,behavior-macro";\
        wait-ms = <50>;\
        #binding-cells = <0>;\
        bindings\
            = <&macro_press &kp LSHFT>\
            , <&macro_press &kp sym>\
            , <&macro_release &kp LSHFT>\
            , <&macro_pause_for_release>\
            , <&macro_release &kp sym>\
            ;\
    }

#define CTRLED(sym, label) c_##sym: c_##sym {\
        label = label;\
        compatible = "zmk,behavior-macro";\
        wait-ms = <50>;\
        #binding-cells = <0>;\
        bindings\
            = <&macro_press &kp LCTRL>\
            , <&macro_press &kp sym>\
            , <&macro_release &kp LCTRL>\
            , <&macro_pause_for_release>\
            , <&macro_release &kp sym>\
            ;\
    }

#define RALTED(sym, label) ra_##sym: ra_##sym {\
        label = label;\
        compatible = "zmk,behavior-macro";\
        wait-ms = <50>;\
        #binding-cells = <0>;\
        bindings\
            = <&macro_press &kp RALT>\
            , <&macro_press &kp sym>\
            , <&macro_release &kp RALT>\
            , <&macro_pause_for_release>\
            , <&macro_release &kp sym>\
            ;\
    }


	
/{	macros {
        CTRLED(C,"copy")
        CTRLED(V,"paste")
        CTRLED(X,"cut")
        CTRLED(A,"all")
        
        
        //shifted symbols
        SHIFTED  (GRAVE,"DE_DEG")    // °
        SHIFTED  (N1,"DE_EXLM")      // !
        SHIFTED  (N2,"DE_DQUO")      // "
        SHIFTED  (N3,"DE_SECT")      // §
        SHIFTED  (N4,"DE_DLR")       // $
        SHIFTED  (N5,"DE_PERC")      // %
        SHIFTED  (N6,"DE_AMPR")      // &
        SHIFTED  (N7,"DE_SLSH")      // /
        SHIFTED  (N8,"DE_LPRN")      // (
        SHIFTED  (N9,"DE_RPRN")      // )
        SHIFTED  (N0,"DE_EQL")       // =
        SHIFTED  (MINUS,"DE_QUES")   // ?
        SHIFTED  (EQUAL,"DE_GRV")    // ` (dead)
        SHIFTED  (RBRC,"DE_ASTR")    // *
        SHIFTED  (NUHS,"DE_QUOT")    // '
        SHIFTED  (NUBS,"DE_RABK")    // >
        SHIFTED  (COMMA,"DE_SCLN")   // ;
        SHIFTED  (DOT,"DE_COLN")     // :
        SHIFTED  (SLASH,"DE_UNDS")   // _
        
        //alt gr symbols   
        RALTED  (N2,"DE_SUP2")       // ²
        RALTED  (N3,"DE_SUP3")       // ³
        RALTED  (N7,"DE_LCBR")       // {
        RALTED  (N8,"DE_LBRC")       // [
        RALTED  (N9,"DE_RBRC")       // ]
        RALTED  (N0,"DE_RCBR")       // }
        RALTED  (MINUS,"DE_BSLS")    // (backslash)
        RALTED  (Q,"DE_AT")          // @
        RALTED  (E,"DE_EURO")        // €      
        RALTED  (RBRC,"DE_TILD")     // ~
        RALTED  (NUBS,"DE_PIPE")     // |
        RALTED  (M,"DE_MICR")        // µ

                
        };
};	
	
	&sk {
        release-after-ms = <2000>;
        //quick-release;
        /delete-property/ ignore-modifiers;
        };
	
	
 
	/ {
	    behaviors {
       		 ht: hold_tap {
            			label = "hold_tap";
            			compatible = "zmk,behavior-hold-tap";
            			#binding-cells = <2>;
           			flavor = "tap-preferred";
            			tapping-term-ms = <300>;
            			quick-tap-ms = <125>;
            			global-quick-tap;
            			bindings = <&kp>, <&kp>;
	    			};
				};


   		conditional_layers {
   				    compatible = "zmk,conditional-layers";
      				    tri_layer {
          					if-layers = <1 2>;		
         					then-layer = <3>;
        					};
   				 };
	
#define OS_CMD  &sk LGUI
#define OS_ALT  &sk LALT
#define OS_CTRL &sk LCTRL
#define OS_SHFT &sk LSHIFT
#define NAV 1
#define SYM 2
#define NUM 3
#define COMP 4
#define CFG 5
#define copy &kp c_C
#define cut &kp c_X
#define all &kp c_A
#define paste &kp c_V
//shifted symbols
#define DE_DEG   &kp s_GRVE    // °
#define DE_EXLM  &kp s_N1      // !
#define DE_DQUO  &kp s_N2      // "
#define DE_SECT  &kp s_N3      // §
#define DE_DLR   &kp s_N4      // $
#define DE_PERC  &kp s_N5      // %
#define DE_AMPR  &kp s_N6      // &
#define DE_SLSH  &kp s_N7      // /
#define DE_LPRN  &kp s_N8      // &kp s_
#define DE_RPRN  &kp s_N9      // )
#define DE_EQL   &kp s_N0       // =
#define DE_QUES  &kp s_MINUS   // ?
#define DE_GRV   &kp s_EQUAL    // ` (dead)
#define DE_ASTR  &kp s_RBRC    // *
#define DE_QUOT  &kp s_NUHS    // '
#define DE_RABK  &kp s_NUBS    // >
#define DE_SCLN  &kp s_COMMA   // ;
#define DE_COLN  &kp s_DOT     // :
#define DE_WNDS  &kp s_SLASH   // _
        
        //alt gr symbols   
#define DE_SUP2 &kp ra_N2       // ²
#define DE_SUP3 &kp ra_N3       // ³
#define DE_LCBR &kp ra_N7       // {
#define DE_LBRC &kp ra_N8       // [
#define DE_RBRC &kp ra_N9       // ]
#define DE_RCBR &kp ra_N0       // }
#define DE_BSLS &kp ra_MINUS    // (backslash)
#define DE_AT &kp ra_Q          // @
#define DE_EURO &kp ra_E        // €      
#define DE_TILD &kp ra_RBRC     // ~
#define DE_PIPE &kp ra_NUBS     // |
#define DE_MICR &kp ra_M        // µ

	

    keymap {
        compatible = "zmk,keymap";
        default_layer {
		    
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │    Ü     │          │          │          │   │          │          │          │          │          │
            DE_P        DE_U     &sl COMP    DE_COMM     DE_Q           DE_G       DE_C       DE_L       DE_M      DE_F   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │    ß     │
            DE_H        DE_I       DE_E      DE_A        DE_O           DE_D       DE_T       DE_R       DE_N      DE_S 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │     ²    │     ³    │          │
	    DE_K        DE_Y       DE_DOT   DE_QUOT      DE_X           DE_J       DE_V       DE_W       DE_B      DE_Z     
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &mo NAV   OS_SHFT       &kp SPACE   &mo SYM
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
      
            >;
        };

		nav_layer {
            
		bindings = <							
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │    Ü     │          │          │          │   │          │          │          │          │          │
            &kp TAB     &trans     &trans     &trans  &kp C_VOL_UP      &mo CFG    &kp HOME   &kp UP    &kp END     &kp DEL   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │    ß     │
            OS_SHFT    OS_CTRL     OS_ALT     OS_CMD  &kp C_VOL_UP     &kp CAPS   &kp LEFT   &kp DOWN  &kp RIGHT   &kp BSPC   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │     ²    │     ³    │          │
              all        cut       paste       copy     &kp C_PP       &trans    &kp PG_DN   &kp PG_UP   &trans   &kp ENTER   
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans      &trans       &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };
        //
		//
		//
        sym_layer {
            
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │    Ü     │          │          │          │   │          │          │          │          │          │
             &kp ESC    DE_LBRC    DE_LCBR    DE_LPRN    DE_TILD       DE_CIRC     DE_RPRN    DE_RCBR    DE_RBRC  DE_GRV 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │    ß     │
           DE_MINS     DE_ASTR     DE_EQL    DE_UNDS    DE_DLR         DE_HASH     OS_CMD     OS_ALT     OS_CTRL   OS_SHFT 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │     ²    │     ³    │          │
            DE_PLUS    DE_PIPE     DE_AT      DE_SLSH    DE_PERC       DE_EURO     DE_BSLS    DE_AMPR    DE_QUES   DE_EXLM 
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans    &trans  	&trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        
        >;
        };
        //
        //
		//
        num_layer {
		    
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │    Ü     │          │          │          │   │          │          │          │          │          │
             &kp N7     &kp N5     &kp N3     &kp N1     &kp N9         &kp N8     &kp N0     &kp N2     &kp N4     &kp N6   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │    ß     │
             OS_SHFT    OS_CTRL    OS_ALT     OS_CMD     &kp F11        &kp F10    OS_CMD     OS_ALT     OS_CTRL    OS_SHFT   
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │     ²    │     ³    │          │
             &kp F7     &kp F5     &kp F3     &kp F1     &kp F9         &kp F8     &kp F12    &kp F2     &kp F4     &kp F6   
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans     &trans         &trans     &trans	
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
					
        >;
        };
        //
		//
		//
		compose_layer {
                 
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │    Ü     │          │          │          │   │          │          │          │          │          │
             &trans     DE_UDIA    &trans     &trans     &trans        &trans      &trans     &trans     &trans     &trans  
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │    Ä     │     Ö    │   │          │          │          │          │    ß     │
             &trans     &trans     &trans    DE_ADIA     DE_ODIA       &trans      &trans     &trans     &trans      DE_SS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │     ²    │     ³    │          │
             &trans     &trans     &trans     &trans     &trans        &trans      &trans    DE_SUP2    DE_SUP3     &trans  
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                              &trans     &trans        &trans      &trans    
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
		>;
        };
        //
		//
		//
        config_layer {
            
        bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ RESET    │          │          │          │PROFILE 0 │   │          │          │          │          │  RESET   │
            &reset     &trans     &trans     &trans   &bt BT_SEL 0     &trans     &trans     &trans     &trans      &reset
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│BOOTLOADER│          │          │          │PROFILE 1 │   │          │          │          │          │BOOTLOADER│
          &bootloader  &trans     &trans     &trans   &bt BT_SEL 1     &trans     &trans     &trans     &trans    &bootloader
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │ CLEAR BT │PROFILE 2 │   │          │          │          │          │          │
            &trans     &trans     &trans   &bt BT_CLR &bt BT_SEL 2     &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
        >;
        };

    };
};
